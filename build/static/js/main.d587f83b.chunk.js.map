{"version":3,"sources":["services/persons.js","components/SearchFilterForm.js","components/NewContactForm.js","components/ContactList.js","components/Notification.js","App.js","index.js"],"names":["personsURL","personsService","getPersons","axios","get","then","response","data","createPerson","newPerson","post","updatePerson","put","id","deletePerson","delete","SearchFilterForm","filterQuery","changeFilterQuery","name","onChange","NewContactForm","entry","addContactHandler","changeEntryHandler","onSubmit","number","type","Person","person","deleteHandler","ContactList","contacts","selected_people","filter","includes","map","Notification","message","notificationStyle","className","App","useState","newFilter","setNewFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","displayErrorNotification","setTimeout","newContact","setNewContact","setContacts","useEffect","newPersons","event","target","value","preventDefault","matchesNewName","some","updatedPerson","concat","catch","error","permissionMessage","window","confirm","find","updatedContact","updatedPersons","reset","field","updatedContactEntry","selectedPersonName","finally","allButRemoved","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d587f83b.chunk.js","sourcesContent":["import axios from 'axios';\nconst personsURL = \"/api/persons\";\n\nconst getPersons = () => {\n    const request = axios.get(personsURL);\n    return request.then(response => response.data);\n}\n\nconst createPerson = (newPerson) => {\n    const request = axios.post(personsURL, newPerson);\n    return request.then(response => response.data);\n};\n\nconst updatePerson = (newPerson) => {\n    const request = axios.put(`${personsURL}/${newPerson.id}`, newPerson);\n    return request.then(response => response.data);\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${personsURL}/${id}`);\n    return request.then(response => response.data);\n}\n\nconst personsService = { getPersons, createPerson, updatePerson, deletePerson };\nexport default personsService;","const SearchFilterForm = ({ filterQuery, changeFilterQuery }) => {\n    return (\n        <div>\n            Filter shown with a\n            <input\n                name={filterQuery}\n                onChange={changeFilterQuery}\n            />\n        </div>\n    );\n}\n\nexport default SearchFilterForm;","const NewContactForm = ({ entry, addContactHandler, changeEntryHandler }) => {\n    return (\n        <>\n            <form onSubmit={addContactHandler}>\n                <div>\n                    Name:\n                    <input\n                        name={entry.name}\n                        onChange={changeEntryHandler(\"name\")}\n                    />\n                    <br></br>\n                    Number:\n                    <input\n                        number={entry.number}\n                        onChange={changeEntryHandler(\"number\")}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </>\n    );\n}\n\nexport default NewContactForm;","const ContactList = ({ contacts, filterQuery, deleteHandler }) => {\n    const matchesSearchTerm = (person) => person.name.includes(filterQuery);\n    const selected_people = contacts.filter(matchesSearchTerm);\n\n    return (\n        <>\n            {selected_people.map(person =>\n                <Person key={person.name} person={person} deleteHandler={deleteHandler} />\n            )}\n        </>\n    );\n}\n\nconst Person = ({ person, deleteHandler }) => {\n    return (\n        <>\n        <form onSubmit={deleteHandler(person.id)} >\n            {person.name} {person.number}\n            <button type=\"submit\">Delete</button>\n            <br></br>\n        </form>\n        </>\n    );\n}\n\nexport default ContactList;","const Notification = ({ message, notificationStyle }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={notificationStyle}>\n            {message}\n        </div>\n    );\n}\n\nexport default Notification;","import React, { useEffect, useState } from \"react\";\n\nimport './index.css'\n\nimport personsService from './services/persons'\n\nimport SearchFilterForm from './components/SearchFilterForm';\nimport NewContactForm from \"./components/NewContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n\n  // Contact Search Filter - Handle Input\n  const [newFilter, setNewFilter] = useState('');\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value);\n  }\n\n  // Notifications\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const notificationDuration = 5000;\n\n  const displaySuccessNotification = (message) => {\n    setSuccessMessage(message);\n    setTimeout(() => {\n      setSuccessMessage(null)\n    }, notificationDuration);\n  }\n\n  const displayErrorNotification = (message) => {\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, notificationDuration);\n  }\n\n  // New Contact Form - Handle Input\n  const [ newContact, setNewContact ] = useState({\n    name: '',\n    number: ''\n  });\n\n  const handleContactInput = (field) => {\n    const contactInputHandler = (event) => {\n      const updatedContactEntry = {\n        ...newContact,\n        [field] : event.target.value\n      };\n      setNewContact(updatedContactEntry);\n    }\n    return contactInputHandler;\n  }\n\n  // Create New Contact\n  const addContact = (event) => {\n    event.preventDefault();\n\n    const matchesNewName = (person) => person.name === newContact.name;\n    if ( contacts.some(matchesNewName) === false ) {\n      // Add Contact if New Person\n      personsService\n        .createPerson(newContact)\n        .then(updatedPerson => {\n          setContacts(contacts.concat(updatedPerson));\n          displaySuccessNotification(`Added ${newContact.name}`);\n        })\n        .catch(error => {\n          displayErrorNotification(error.response.data.error);\n        });\n    }\n    else {\n      // Request Permission to Overwrite Number if Old Contact\n      const permissionMessage = `${newContact.name} is already added to the phonebook, replace the old number with a new one?`;\n      if ( window.confirm(permissionMessage) ) {\n        const id = contacts.find(matchesNewName).id;\n        const updatedContact = { ...newContact, id : id };\n        \n        personsService\n          .updatePerson(updatedContact)\n          .then( (newPerson) => {\n            const updatedPersons = contacts.map( person => \n              (person.id === newPerson.id) ? updatedContact : person\n            );\n            setContacts(updatedPersons);\n          });\n      }\n    }\n\n    // Clear New Contact Form\n    setNewContact({ name : '', number : '' });\n    event.target.reset()\n  }\n\n  const removeContact = (id) => {\n    const contactRemovalHandler = (event) => {\n      event.preventDefault();\n\n      const selectedPersonName = contacts.find( person => person.id === id).name;\n      const permissionMessage = `Delete ${selectedPersonName}?`;\n      if (window.confirm(permissionMessage)) {\n        personsService\n          .deletePerson(id)\n          .catch( () => {\n            // Contact Already Removed in Server\n            displayErrorNotification(`Information of ${selectedPersonName} has already been removed from server`);\n          })\n          .finally( () => {\n            // Remove Contact from Interface\n            const allButRemoved = contacts.filter(person => person.id !== id);\n            setContacts(allButRemoved);\n          });\n\n      }\n    }\n    \n    return contactRemovalHandler;\n  }\n\n  // Contact List - Load from Server\n  const [contacts, setContacts] = useState([]);\n\n  const personsHook = () => {\n    personsService\n      .getPersons()\n      .then(newPersons => setContacts(newPersons));\n  }\n  useEffect(personsHook, []);\n\n  return (\n    <div>\n      <h1>Phonebook</h1> \n      <Notification message={errorMessage} notificationStyle=\"failureNotification\"/>\n      <Notification message={successMessage} notificationStyle=\"successNotification\"/>\n      <SearchFilterForm filterQuery={newFilter} changeFilterQuery={handleFilterChange} />\n\n      <h2>Add New Entry</h2>\n      <NewContactForm entry={newContact} addContactHandler={addContact} changeEntryHandler={handleContactInput} />\n\n      <h2>Numbers</h2>\n      <ContactList contacts={contacts} filterQuery={newFilter} deleteHandler={removeContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}